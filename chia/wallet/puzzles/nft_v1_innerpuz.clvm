(mod
  (
    P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH
    NFT_V1_MOD_HASH
    INNER_PUZZLE  ; returns (new_owner, trade_prices_list, new_pk, transfer_program_solution, Optional[metadata_updater_reveal], Optional[metadata_updater_solution], Conditions)
    inner_solution
  )

  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)

   (defconstant NEW_OWNER_CONDITION -10)
   (defconstant METADATA_REVEAL_NUMBER -23)
   (defconstant RECURRY_TRANSFER_PROGRAM -22)

   ; New Price and New Pubkey both go into the Transfer Program's Solution
   ; New Pubkey must sign New Price and this gets added to our returned conditions

   (defun sha256tree1
          (TREE)
          (if (l TREE)
              (sha256 2 (sha256tree1 (f TREE)) (sha256tree1 (r TREE)))
              (sha256 1 TREE)
          )
   )

   (defun-inline recurry_self (P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH NFT_V1_MOD_HASH INNER_INNER_HASH)
      (list CREATE_COIN (puzzle-hash-of-curried-function NFT_V1_MOD_HASH
                                       INNER_INNER_HASH
                                       (sha256 ONE NFT_V1_MOD_HASH)
                                       (sha256 ONE P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH)

      ) ONE (list INNER_INNER_HASH))
    )

    (defun process_results (P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH NFT_V1_MOD_HASH (new_owner trade_prices_list new_pk transfer_program_solution metadata_updater_reveal metadata_updater_solution conditions))  ; conditions are (new_owner, new_pk, trade_prices_list)
      (c
        (recurry_self P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH NFT_V1_MOD_HASH (puzzle-hash-of-curried-function P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH (sha256 ONE new_pk)))
        (c (list NEW_OWNER_CONDITION new_owner trade_prices_list transfer_program_solution)
          (c (list AGG_SIG_ME new_pk (sha256tree1 trade_prices_list))

            (if metadata_updater_reveal
              (c (list METADATA_REVEAL_NUMBER metadata_updater_reveal metadata_updater_solution) conditions)
              conditions
            )
      )))
    )

    (defun stager (P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH NFT_V1_MOD_HASH results)
        (process_results
          P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH
          NFT_V1_MOD_HASH
          (if (l (f results))  ; move aggsig inside conditions, if it exists
            (c (f (r results))
              (c (f (r (r results)))
                (c (f (r (r (r results))))
                  (c (f (r (r (r (r results)))))
                    (c (f (r (r (r (r (r results))))))
                      (c (f (r (r (r (r (r (r results)))))))
                        (list (c (f results) (f (r (r (r (r (r (r (r results))))))))))
                      )
                    )
                  )
                )
              )
            )
            results
          )
        )
    )

    (stager P2_DELEGATED_PUZZLE_OR_HIDDEN_PUZZLE_MOD_HASH NFT_V1_MOD_HASH (a INNER_PUZZLE inner_solution))
)
